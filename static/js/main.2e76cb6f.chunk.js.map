{"version":3,"sources":["media/origin.png","media/0.png","media/1.png","media/2.png","media/3.png","media/4.png","media/5.png","media/6.png","media/7.png","media/8.png","components/Tile.js","logic/findNumIn2DArray.js","logic/shuffleBoard.js","components/GameBoard.js","logic/isWin.js","components/App.js","index.js"],"names":["module","exports","Tile","style","gridArea","this","props","gridRow","gridCol","height","width","className","src","img","alt","imageIndex","onClick","React","Component","findNumIn2DArray","array","target","row","length","col","shuffleBoard","rowNum","colNum","board","Array","i","sort","Math","random","board2D","push","splice","GameBoard","handleClick","tileIndex","state","current","undefined","holeCoordinate","holeIndex","tileCoordinate","abs","newBoard","slice","setState","colSize","isWin","alert","createTiles","tileComponents","key","tileImages","maxHeight","maxWidth","tile0img","tile1img","tile2img","tile3img","tile4img","tile5img","tile6img","tile7img","tile8img","bind","originImage","App","ReactDOM","render","document","getElementById"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,gBCA3CD,EAAOC,QAAU,IAA0B,+B,+OCGtBC,G,6LACR,IAAD,OAEEC,EAAQ,CACVC,SAAUC,KAAKC,MAAMC,QAAU,IAAMF,KAAKC,MAAME,QAAU,IAAMH,KAAKC,MAAMC,QAAU,IAAMF,KAAKC,MAAME,QAGtGC,OAAQ,OACRC,MAAO,QAEX,OACI,yBAAKC,UATS,OAUTR,MAAOA,EACPS,IAAKP,KAAKC,MAAMO,IAChBC,IAAKT,KAAKC,MAAMS,WAChBC,QAAS,kBAAM,EAAKV,MAAMU,QAAQ,EAAKV,MAAMS,mB,GAf5BE,IAAMC,YCHzB,SAASC,EAAiBC,EAAOC,GAC5C,IAAI,IAAIC,EAAM,EAAEA,EAAMF,EAAMG,OAAQD,IAChC,IAAI,IAAIE,EAAM,EAAEA,EAAMJ,EAAME,GAAKC,OAAQC,IACrC,GAAGJ,EAAME,GAAKE,KAASH,EAAQ,MAAO,CAACC,IAAKA,EAAKE,IAAKA,GAI9D,OAAO,KCPI,SAASC,EAAaC,EAAQC,GAIzC,IAHA,IAEIC,EAAQC,MAFIH,EAASC,GAGjBG,EAAI,EAAGA,EAAIF,EAAML,OAAQO,IAC7BF,EAAME,GAAKA,EAEPF,EAWFG,MAAK,kBAAMC,KAAKC,SAAW,MARjC,IADA,IAAIC,EAAU,GACRN,EAAML,QACRW,EAAQC,KAAKP,EAAMQ,OAAO,EAAET,IAEhC,OAAOO,E,6KCOUG,E,YACjB,WAAY/B,GAAQ,IAAD,8BACf,4CAAMA,KAgBVgC,YAAc,SAASC,GACnB,IAAIX,EAAQvB,KAAKmC,MAAMC,QACvB,QAAaC,IAAVd,GAAiC,OAAVA,EAA1B,CAGA,IAAIe,EAAiBxB,EAAiBS,EAAOvB,KAAKuC,WAG9CC,EAAiB1B,EAAiBS,EAAOW,GAG7C,GAAqB,MAAlBI,GAA4C,MAAlBE,GAA0Bb,KAAKc,IAAIH,EAAerB,IAAMuB,EAAevB,KAAOU,KAAKc,IAAIH,EAAenB,IAAMqB,EAAerB,OAAS,EAAE,CAG/J,IADA,IAAIuB,EAAW,GACPjB,EAAI,EAAGA,EAAIF,EAAML,OAAQO,IAC7BiB,EAASZ,KAAKP,EAAME,GAAGkB,SAG3BD,EAASF,EAAevB,KAAKuB,EAAerB,KAAOnB,KAAKuC,UACxDG,EAASJ,EAAerB,KAAKqB,EAAenB,KAAOe,EAEnDlC,KAAK4C,SAAS,CACVR,QAASM,IC5DV,SAAenB,GAC1B,IAAI,IAAIN,EAAM,EAAGA,EAAMM,EAAML,OAAQD,IAEjC,IADA,IAAI4B,EAAUtB,EAAMN,GAAKC,OACjBC,EAAM,EAAGA,EAAM0B,EAAS1B,IAC5B,GAAGI,EAAMN,GAAKE,KAASF,EAAI4B,EAAU1B,EAAK,OAAO,EAIzD,OAAO,EDuDI2B,CAAMJ,IACLK,MAAM,sBA3CC,EAiDnBC,YAAc,WAIV,IAHA,IAAIC,EAAiB,GACjB1B,EAAQvB,KAAKmC,MAAMC,QAEfnB,EAAM,EAAGA,EAAMM,EAAML,OAAQD,IACjC,IAAI,IAAIE,EAAM,EAAGA,EAAMI,EAAMN,GAAKC,OAAQC,IACnCI,EAAMN,GAAKE,KAASnB,KAAKuC,WAE5BU,EAAenB,KACX,kBAAC,EAAD,CAAMoB,IAAK3B,EAAMN,GAAKE,GAChBT,WAAYa,EAAMN,GAAKE,GACvBX,IAAKR,KAAKmD,WAAW5B,EAAMN,GAAKE,IAChCiC,UAAWpD,KAAKoD,UAAY,EAC5BC,SAAUrD,KAAKqD,SAAW,EAC1BnD,QAASe,EAAI,EACbd,QAASgB,EAAI,EACbR,QAASX,KAAKiC,eAKhC,OAAOgB,GAnEP,EAAKE,WAAa,CAACG,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,IAAUC,KACnG,EAAKvB,UAAY,EAEjB,EAAKa,UAAY,IACjB,EAAKC,SAAW,IAEhB,EAAKlB,MAAQ,CACTC,QAAShB,EAAa,EAAG,IAG7B,EAAK4B,YAAc,EAAKA,YAAYe,KAAjB,gBACnB,EAAK9B,YAAc,EAAKA,YAAY8B,KAAjB,gBAdJ,E,sEA2Ef,OACI,yBAAKzD,UAAU,cACVN,KAAKgD,cACN,yBAAK1C,UAAU,aAAaC,IAAKyD,IAAavD,IAAI,Y,GA/E3BG,IAAMC,WEhBxBoD,E,iLAIb,OACI,yBAAK3D,UAFS,OAGV,kBAAC,EAAD,W,GANiBM,IAAMC,WCCvCqD,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.2e76cb6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/origin.068bcbaa.png\";","module.exports = __webpack_public_path__ + \"static/media/0.b4b28463.png\";","module.exports = __webpack_public_path__ + \"static/media/1.1fea833f.png\";","module.exports = __webpack_public_path__ + \"static/media/2.2ea2e1c5.png\";","module.exports = __webpack_public_path__ + \"static/media/3.c06514a8.png\";","module.exports = __webpack_public_path__ + \"static/media/4.83019e3d.png\";","module.exports = __webpack_public_path__ + \"static/media/5.5b723bbb.png\";","module.exports = __webpack_public_path__ + \"static/media/6.07b242d8.png\";","module.exports = __webpack_public_path__ + \"static/media/7.115e2eb2.png\";","module.exports = __webpack_public_path__ + \"static/media/8.7ce4002b.png\";","import React from \"react\";\r\nimport \"./Tile.css\"\r\n\r\nexport default class Tile extends React.Component{\r\n    render(){\r\n        const className = \"tile\";\r\n        const style = {\r\n            gridArea: this.props.gridRow + \"/\" + this.props.gridCol + \"/\" + this.props.gridRow + \"/\" + this.props.gridCol,\r\n            //maxHeight: this.props.maxHeight,\r\n            //maxWidth: this.props.maxWidth,\r\n            height: \"100%\",\r\n            width: \"100%\",\r\n        }\r\n        return (\r\n            <img className={className}\r\n                 style={style}\r\n                 src={this.props.img}\r\n                 alt={this.props.imageIndex}\r\n                 onClick={() => this.props.onClick(this.props.imageIndex)}\r\n            />\r\n        )\r\n    }\r\n}","export default function findNumIn2DArray(array, target){\r\n    for(let row = 0;row < array.length; row++){\r\n        for(let col = 0;col < array[row].length; col++){\r\n            if(array[row][col] === target) return {row: row, col: col};\r\n        }\r\n    }\r\n    \r\n    return null;\r\n}","export default function shuffleBoard(rowNum, colNum){\r\n    let totoalNum = rowNum * colNum;\r\n    \r\n    let board = Array(totoalNum);\r\n    for(let i = 0; i < board.length; i++){\r\n        board[i] = i;\r\n    }\r\n    shuffle(board);\r\n    \r\n    var board2D = [];\r\n    while(board.length)\r\n        board2D.push(board.splice(0,colNum));\r\n    \r\n    return board2D;\r\n}\r\n\r\n// https://javascript.info/task/shuffle\r\nfunction shuffle(array) {\r\n    array.sort(() => Math.random() - 0.5);\r\n}","import React from \"react\";\r\nimport \"./GameBoard.css\";\r\nimport Tile from \"./Tile\";\r\nimport findNumIn2DArray from \"../logic/findNumIn2DArray\";\r\nimport shuffleBoard from \"../logic/shuffleBoard\";\r\nimport isWin from \"../logic/isWin\";\r\nimport originImage from \"../media/origin.png\"\r\n\r\n// load all tiles\r\nimport tile0img from \"../media/0.png\"\r\nimport tile1img from \"../media/1.png\"\r\nimport tile2img from \"../media/2.png\"\r\nimport tile3img from \"../media/3.png\"\r\nimport tile4img from \"../media/4.png\"\r\nimport tile5img from \"../media/5.png\"\r\nimport tile6img from \"../media/6.png\"\r\nimport tile7img from \"../media/7.png\"\r\nimport tile8img from \"../media/8.png\"\r\n\r\n\r\nexport default class GameBoard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        \r\n        this.tileImages = [tile0img, tile1img, tile2img, tile3img, tile4img, tile5img, tile6img, tile7img, tile8img];\r\n        this.holeIndex = 0;\r\n        \r\n        this.maxHeight = 600;\r\n        this.maxWidth = 600;\r\n        \r\n        this.state = {\r\n            current: shuffleBoard(3, 3),\r\n        };\r\n        \r\n        this.createTiles = this.createTiles.bind(this);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n    \r\n    handleClick = function(tileIndex){\r\n        let board = this.state.current;\r\n        if(board === undefined || board === null) return;\r\n        \r\n        // find the coordinate of hole\r\n        let holeCoordinate = findNumIn2DArray(board, this.holeIndex);\r\n    \r\n        // find the coordinate of tile\r\n        let tileCoordinate = findNumIn2DArray(board, tileIndex);\r\n        \r\n        // distance is one\r\n        if(holeCoordinate != null && tileCoordinate != null && Math.abs(holeCoordinate.row - tileCoordinate.row) + Math.abs(holeCoordinate.col - tileCoordinate.col) === 1){\r\n            // make a copy\r\n            let newBoard = [];\r\n            for(let i = 0; i < board.length; i++){\r\n                newBoard.push(board[i].slice());\r\n            }\r\n    \r\n            newBoard[tileCoordinate.row][tileCoordinate.col] = this.holeIndex;\r\n            newBoard[holeCoordinate.row][holeCoordinate.col] = tileIndex;\r\n            \r\n            this.setState({\r\n                current: newBoard,\r\n            });\r\n            \r\n            if(isWin(newBoard)){\r\n                alert(\"Congratulation!\");\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n    createTiles = function(){\r\n        let tileComponents = [];\r\n        let board = this.state.current;\r\n        \r\n        for(let row = 0; row < board.length; row++){\r\n            for(let col = 0; col < board[row].length; col++){\r\n                if(board[row][col] === this.holeIndex) continue; // skip the whole\r\n                \r\n                tileComponents.push(\r\n                    <Tile key={board[row][col]}\r\n                          imageIndex={board[row][col]}\r\n                          img={this.tileImages[board[row][col]]}\r\n                          maxHeight={this.maxHeight / 3.0}\r\n                          maxWidth={this.maxWidth / 3.0}\r\n                          gridRow={row+1}\r\n                          gridCol={col+1}\r\n                          onClick={this.handleClick}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n        return tileComponents;\r\n    }\r\n\r\n    render(){\r\n        \r\n        return (\r\n            <div className=\"game-board\">\r\n                {this.createTiles()}\r\n                <img className=\"background\" src={originImage} alt=\"bg\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","export default function isWin(board){\r\n    for(let row = 0; row < board.length; row++){\r\n        let colSize = board[row].length;\r\n        for(let col = 0; col < colSize; col++){\r\n            if(board[row][col] !== row*colSize + col) return false;\r\n        }\r\n    }\r\n    \r\n    return true;\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport GameBoard from \"./GameBoard\";\r\n\r\nexport default class App extends React.Component {\r\n\r\n    render() {\r\n        const className = \"app\";\r\n        return (\r\n            <div className={className}>\r\n                <GameBoard/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}